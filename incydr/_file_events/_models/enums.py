from enum import Enum


class GroupClause(Enum):
    and_ = "AND"
    or_ = "OR"


class SrtDir(Enum):
    asc = "asc"
    desc = "desc"


class EventFields(Enum):
    _timestamp = "@timestamp"
    destination_account_name = "destination.accountName"
    destination_account_type = "destination.accountType"
    destination_category = "destination.category"
    destination_domains = "destination.domains"
    destination_email_recipients = "destination.email.recipients"
    destination_email_subject = "destination.email.subject"
    destination_ip = "destination.ip"
    destination_name = "destination.name"
    destination_operating_system = "destination.operatingSystem"
    destination_print_job_name = "destination.printJobName"
    destination_printed_files_backup_path = "destination.printedFilesBackupPath"
    destination_printer_name = "destination.printerName"
    destination_private_ip = "destination.privateIp"
    destination_removable_media_bus_type = "destination.removableMedia.busType"
    destination_removable_media_capacity = "destination.removableMedia.capacity"
    destination_removable_media_media_name = "destination.removableMedia.mediaName"
    destination_removable_media_name = "destination.removableMedia.name"
    destination_removable_media_partition_id = "destination.removableMedia.partitionId"
    destination_removable_media_serial_number = (
        "destination.removableMedia.serialNumber"
    )
    destination_removable_media_vendor = "destination.removableMedia.vendor"
    destination_removable_media_volume_name = "destination.removableMedia.volumeName"
    destination_tabs_title = "destination.tabs.title"
    destination_tabs_title_error = "destination.tabs.titleError"
    destination_tabs_url = "destination.tabs.url"
    destination_tabs_url_error = "destination.tabs.urlError"
    destination_user_email = "destination.user.email"
    event_action = "event.action"
    event_id = "event.id"
    event_ingested = "event.ingested"
    event_inserted = "event.inserted"
    event_observer = "event.observer"
    event_related_events_agent_timestamp = "event.relatedEvents.agentTimestamp"
    event_related_events_event_action = "event.relatedEvents.eventAction"
    event_related_events_id = "event.relatedEvents.id"
    event_related_events_source_category = "event.relatedEvents.sourceCategory"
    event_related_events_source_name = "event.relatedEvents.sourceName"
    event_related_events_tabs_title = "event.relatedEvents.tabs.title"
    event_related_events_tabs_title_error = "event.relatedEvents.tabs.titleError"
    event_related_events_tabs_url = "event.relatedEvents.tabs.url"
    event_related_events_tabs_url_error = "event.relatedEvents.tabs.urlError"
    event_related_events_user_email = "event.relatedEvents.userEmail"
    event_share_type = "event.shareType"
    file_category = "file.category"
    file_category_by_bytes = "file.categoryByBytes"
    file_category_by_extension = "file.categoryByExtension"
    file_classifications_value = "file.classifications.value"
    file_classifications_vendor = "file.classifications.vendor"
    file_cloud_drive_id = "file.cloudDriveId"
    file_created = "file.created"
    file_directory = "file.directory"
    file_directory_id = "file.directoryId"
    file_hash_md5 = "file.hash.md5"
    file_hash_md5_error = "file.hash.md5Error"
    file_hash_sha256 = "file.hash.sha256"
    file_hash_sha256_error = "file.hash.sha256Error"
    file_id = "file.id"
    file_mime_type_by_bytes = "file.mimeTypeByBytes"
    file_mime_type_by_extension = "file.mimeTypeByExtension"
    file_modified = "file.modified"
    file_name = "file.name"
    file_owner = "file.owner"
    file_size_in_bytes = "file.sizeInBytes"
    file_url = "file.url"
    process_executable = "process.executable"
    process_owner = "process.owner"
    report_count = "report.count"
    report_description = "report.description"
    report_headers = "report.headers"
    report_id = "report.id"
    report_name = "report.name"
    report_type = "report.type"
    risk_indicators_name = "risk.indicators.name"
    risk_indicators_weight = "risk.indicators.weight"
    risk_score = "risk.score"
    risk_severity = "risk.severity"
    risk_trust_reason = "risk.trustReason"
    risk_trusted = "risk.trusted"
    source_category = "source.category"
    source_domain = "source.domain"
    source_domains = "source.domains"
    source_email_from = "source.email.from"
    source_email_sender = "source.email.sender"
    source_ip = "source.ip"
    source_name = "source.name"
    source_operating_system = "source.operatingSystem"
    source_private_ip = "source.privateIp"
    source_removable_media_bus_type = "source.removableMedia.busType"
    source_removable_media_capacity = "source.removableMedia.capacity"
    source_removable_media_media_name = "source.removableMedia.mediaName"
    source_removable_media_name = "source.removableMedia.name"
    source_removable_media_partition_id = "source.removableMedia.partitionId"
    source_removable_media_serial_number = "source.removableMedia.serialNumber"
    source_removable_media_vendor = "source.removableMedia.vendor"
    source_removable_media_volume_name = "source.removableMedia.volumeName"
    source_tabs_title = "source.tabs.title"
    source_tabs_title_error = "source.tabs.titleError"
    source_tabs_url = "source.tabs.url"
    source_tabs_url_error = "source.tabs.urlError"
    user_device_uid = "user.deviceUid"
    user_email = "user.email"
    user_id = "user.id"


class EventType(Enum):
    created = "CREATED"
    deleted = "DELETED"
    downloaded = "DOWNLOADED"
    emailed = "EMAILED"
    modified = "MODIFIED"
    open = "OPEN"
    previewed = "PREVIEWED"
    printed = "PRINTED"
    read_by_app = "READ_BY_APP"
    restore = "RESTORE"
    rule_match = "RULE_MATCH"
    unchanged = "UNCHANGED"
    unsupported = "UNSUPPORTED"


class FileType(Enum):
    block_device = "BLOCK_DEVICE"
    bundle = "BUNDLE"
    char_device = "CHAR_DEVICE"
    dir = "DIR"
    fifo = "FIFO"
    file = "FILE"
    mac_rsrc = "MAC_RSRC"
    symlink = "SYMLINK"
    unknown = "UNKNOWN"
    win_nds = "WIN_NDS"


class RemoteActivity(Enum):
    false = "FALSE"
    true = "TRUE"
    unknown = "UNKNOWN"


class ReportType(Enum):
    report_type_ad_hoc = "REPORT_TYPE_AD_HOC"
    report_type_saved = "REPORT_TYPE_SAVED"


class RiskSeverity(Enum):
    critical = "CRITICAL"
    high = "HIGH"
    low = "LOW"
    moderate = "MODERATE"
    no_risk_indicated = "NO_RISK_INDICATED"


class Shared(Enum):
    false = "FALSE"
    true = "TRUE"


class Operator(Enum):
    does_not_exist = "DOES_NOT_EXIST"
    exists = "EXISTS"
    greater_than = "GREATER_THAN"
    is_ = "IS"
    is_not = "IS_NOT"
    less_than = "LESS_THAN"
    on = "ON"
    on_or_after = "ON_OR_AFTER"
    on_or_before = "ON_OR_BEFORE"
    within_the_last = "WITHIN_THE_LAST"


class ProblemType(Enum):
    illegal_group = "ILLEGAL_GROUP"
    illegal_operator = "ILLEGAL_OPERATOR"
    illegal_sort = "ILLEGAL_SORT"
    illegal_value = "ILLEGAL_VALUE"
    invalid_page_number = "INVALID_PAGE_NUMBER"
    invalid_page_size = "INVALID_PAGE_SIZE"
    invalid_page_token = "INVALID_PAGE_TOKEN"
    max_filters_exceeded = "MAX_FILTERS_EXCEEDED"
    max_length_exceeded = "MAX_LENGTH_EXCEEDED"
    missing_filters = "MISSING_FILTERS"
    missing_groups = "MISSING_GROUPS"
    missing_value = "MISSING_VALUE"
    query_timeout = "QUERY_TIMEOUT"
    search_failed = "SEARCH_FAILED"
    unexpected_value = "UNEXPECTED_VALUE"
